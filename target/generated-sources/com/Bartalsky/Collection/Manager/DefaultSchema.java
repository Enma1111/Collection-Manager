/*
 * This file is generated by jOOQ.
 */
package com.Bartalsky.Collection.Manager;

import com.Bartalsky.Collection.Manager.tables.BookTable;
import com.Bartalsky.Collection.Manager.tables.BookTableFts;
import com.Bartalsky.Collection.Manager.tables.BookTableFtsConfig;
import com.Bartalsky.Collection.Manager.tables.BookTableFtsData;
import com.Bartalsky.Collection.Manager.tables.BookTableFtsIdx;
import com.Bartalsky.Collection.Manager.tables.ComicTable;
import com.Bartalsky.Collection.Manager.tables.ComicTableFts;
import com.Bartalsky.Collection.Manager.tables.ComicTableFtsConfig;
import com.Bartalsky.Collection.Manager.tables.ComicTableFtsData;
import com.Bartalsky.Collection.Manager.tables.ComicTableFtsIdx;
import com.Bartalsky.Collection.Manager.tables.MovieTable;
import com.Bartalsky.Collection.Manager.tables.MovieTableFts;
import com.Bartalsky.Collection.Manager.tables.MovieTableFtsConfig;
import com.Bartalsky.Collection.Manager.tables.MovieTableFtsData;
import com.Bartalsky.Collection.Manager.tables.MovieTableFtsIdx;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>Book_Table</code>.
     */
    public final BookTable BOOK_TABLE = BookTable.BOOK_TABLE;

    /**
     * The table <code>Book_Table_fts</code>.
     */
    public final BookTableFts BOOK_TABLE_FTS = BookTableFts.BOOK_TABLE_FTS;

    /**
     * The table <code>Book_Table_fts_config</code>.
     */
    public final BookTableFtsConfig BOOK_TABLE_FTS_CONFIG = BookTableFtsConfig.BOOK_TABLE_FTS_CONFIG;

    /**
     * The table <code>Book_Table_fts_data</code>.
     */
    public final BookTableFtsData BOOK_TABLE_FTS_DATA = BookTableFtsData.BOOK_TABLE_FTS_DATA;

    /**
     * The table <code>Book_Table_fts_idx</code>.
     */
    public final BookTableFtsIdx BOOK_TABLE_FTS_IDX = BookTableFtsIdx.BOOK_TABLE_FTS_IDX;

    /**
     * The table <code>Comic_Table</code>.
     */
    public final ComicTable COMIC_TABLE = ComicTable.COMIC_TABLE;

    /**
     * The table <code>Comic_Table_fts</code>.
     */
    public final ComicTableFts COMIC_TABLE_FTS = ComicTableFts.COMIC_TABLE_FTS;

    /**
     * The table <code>Comic_Table_fts_config</code>.
     */
    public final ComicTableFtsConfig COMIC_TABLE_FTS_CONFIG = ComicTableFtsConfig.COMIC_TABLE_FTS_CONFIG;

    /**
     * The table <code>Comic_Table_fts_data</code>.
     */
    public final ComicTableFtsData COMIC_TABLE_FTS_DATA = ComicTableFtsData.COMIC_TABLE_FTS_DATA;

    /**
     * The table <code>Comic_Table_fts_idx</code>.
     */
    public final ComicTableFtsIdx COMIC_TABLE_FTS_IDX = ComicTableFtsIdx.COMIC_TABLE_FTS_IDX;

    /**
     * The table <code>Movie_Table</code>.
     */
    public final MovieTable MOVIE_TABLE = MovieTable.MOVIE_TABLE;

    /**
     * The table <code>Movie_Table_fts</code>.
     */
    public final MovieTableFts MOVIE_TABLE_FTS = MovieTableFts.MOVIE_TABLE_FTS;

    /**
     * The table <code>Movie_Table_fts_config</code>.
     */
    public final MovieTableFtsConfig MOVIE_TABLE_FTS_CONFIG = MovieTableFtsConfig.MOVIE_TABLE_FTS_CONFIG;

    /**
     * The table <code>Movie_Table_fts_data</code>.
     */
    public final MovieTableFtsData MOVIE_TABLE_FTS_DATA = MovieTableFtsData.MOVIE_TABLE_FTS_DATA;

    /**
     * The table <code>Movie_Table_fts_idx</code>.
     */
    public final MovieTableFtsIdx MOVIE_TABLE_FTS_IDX = MovieTableFtsIdx.MOVIE_TABLE_FTS_IDX;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            BookTable.BOOK_TABLE,
            BookTableFts.BOOK_TABLE_FTS,
            BookTableFtsConfig.BOOK_TABLE_FTS_CONFIG,
            BookTableFtsData.BOOK_TABLE_FTS_DATA,
            BookTableFtsIdx.BOOK_TABLE_FTS_IDX,
            ComicTable.COMIC_TABLE,
            ComicTableFts.COMIC_TABLE_FTS,
            ComicTableFtsConfig.COMIC_TABLE_FTS_CONFIG,
            ComicTableFtsData.COMIC_TABLE_FTS_DATA,
            ComicTableFtsIdx.COMIC_TABLE_FTS_IDX,
            MovieTable.MOVIE_TABLE,
            MovieTableFts.MOVIE_TABLE_FTS,
            MovieTableFtsConfig.MOVIE_TABLE_FTS_CONFIG,
            MovieTableFtsData.MOVIE_TABLE_FTS_DATA,
            MovieTableFtsIdx.MOVIE_TABLE_FTS_IDX
        );
    }
}
